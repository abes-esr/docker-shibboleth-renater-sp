#!/bin/bash

# forward parameters to docker process (apache and shibd)
export RENATER_SP_TEST_OR_PROD=${RENATER_SP_TEST_OR_PROD:='TEST'}
export RENATER_SP_TEST_OR_PROD=${RENATER_SP_TEST_OR_PROD^^} # force upercase: TEST or PROD
export RENATER_SP_ENTITY_ID=${RENATER_SP_ENTITY_ID}
export RENATER_SP_ADMIN_MAIL=${RENATER_SP_ADMIN_MAIL:='admin@exemple.fr'}
export RENATER_SP_HTTPD_SERVER_NAME=${RENATER_SP_HTTPD_SERVER_NAME}
export RENATER_SP_HTTPD_LOG_LEVEL=${RENATER_SP_HTTPD_LOG_LEVEL:='info ssl:warn'}
export RENATER_SP_HTTPD_PROTECTED_PATH=${RENATER_SP_HTTPD_PROTECTED_PATH}
export RENATER_SP_HTTPD_PUBLIC_PROXY_TO=${RENATER_SP_HTTPD_PUBLIC_PROXY_TO}
export RENATER_SP_HTTPD_PROTECTED_PROXY_TO=${RENATER_SP_HTTPD_PROTECTED_PROXY_TO}
# for easy debug: display the container parameters at startup
env | grep RENATER_SP_
# check for mandatory parameters
SEE_ALSO_LINK="Have a look to https://github.com/abes-esr/docker-shibboleth-sp/blob/main/.env-dist for values examples."
if [ -z ${RENATER_SP_ENTITY_ID} ]; then echo "Error: RENATER_SP_ENTITY_ID is a mandatory parameter. ${SEE_ALSO_LINK}" && exit 1 ; fi
if [ -z ${RENATER_SP_HTTPD_SERVER_NAME} ]; then echo "Error: RENATER_SP_HTTPD_SERVER_NAME is a mandatory parameter. ${SEE_ALSO_LINK}" && exit 1 ; fi
if [ -z ${RENATER_SP_HTTPD_PROTECTED_PATH} ]; then echo "Error: RENATER_SP_HTTPD_PROTECTED_PATH is a mandatory parameter. ${SEE_ALSO_LINK}" && exit 1 ; fi
if [ -z ${RENATER_SP_HTTPD_PUBLIC_PROXY_TO} ]; then echo "Error: RENATER_SP_HTTPD_PUBLIC_PROXY_TO is a mandatory parameter. ${SEE_ALSO_LINK}" && exit 1 ; fi
if [ -z ${RENATER_SP_HTTPD_PROTECTED_PROXY_TO} ]; then echo "Error: RENATER_SP_HTTPD_PROTECTED_PROXY_TO is a mandatory parameter. ${SEE_ALSO_LINK}" && exit 1 ; fi

# instanciates shibboleth2.xml from it's template
cp -f /etc/shibboleth/shibboleth2.orig.xml /etc/shibboleth/shibboleth2.xml
sed -i "s#https://replaceme/sp#${RENATER_SP_ENTITY_ID}#" /etc/shibboleth/shibboleth2.xml
sed -i "s#admin@replace.me#${RENATER_SP_ADMIN_MAIL}#" /etc/shibboleth/shibboleth2.xml
## METADATA Mgt
if [ "$RENATER_SP_USE_MDQ" = "0" ]; then
	if [ "$RENATER_SP_TEST_OR_PROD" = "PROD" ]; then
		# comment the TEST blocs
		sed -i 's#<!-- RENATER_SP_TEST_OR_PROD=TEST BEGIN -->#<!-- RENATER_SP_TEST_OR_PROD=TEST BEGIN --><!--#g' /etc/shibboleth/shibboleth2.xml
		sed -i 's#<!-- RENATER_SP_TEST_OR_PROD=TEST END -->#--><!-- RENATER_SP_TEST_OR_PROD=TEST END -->#g' /etc/shibboleth/shibboleth2.xml
		# uncomment the PROD blocs
		sed -i 's#<!-- RENATER_SP_TEST_OR_PROD=PROD BEGIN --><!--#<!-- RENATER_SP_TEST_OR_PROD=PROD BEGIN -->#g' /etc/shibboleth/shibboleth2.xml
		sed -i 's#--><!-- RENATER_SP_TEST_OR_PROD=PROD END -->#<!-- RENATER_SP_TEST_OR_PROD=PROD END -->#g' /etc/shibboleth/shibboleth2.xml
	else
		if [ "$RENATER_SP_TEST_OR_PROD" != "TEST" ]; then
			echo "Error: RENATER_SP_TEST_OR_PROD value must be set to TEST ou PROD (your current value is '$RENATER_SP_TEST_OR_PROD')"
			exit 1
		fi
	fi
else
	# Use MDQ
	# comment the TEST blocs
	sed -i 's#<!-- RENATER_SP_TEST_OR_PROD=TEST BEGIN -->#<!-- RENATER_SP_TEST_OR_PROD=TEST BEGIN --><!--#g' /etc/shibboleth/shibboleth2.xml
	sed -i 's#<!-- RENATER_SP_TEST_OR_PROD=TEST END -->#--><!-- RENATER_SP_TEST_OR_PROD=TEST END -->#g' /etc/shibboleth/shibboleth2.xml
	# uncomment MDQ blocks
	sed -i 's#<!-- RENATER_SP_MDQ BEGIN --><!--#<!-- RENATER_SP_MDQ BEGIN -->#g' /etc/shibboleth/shibboleth2.xml
	sed -i 's#--><!-- RENATER_SP_MDQ END -->#<!-- RENATER_SP_MDQ END -->#g' /etc/shibboleth/shibboleth2.xml
	# set MDQ server URL
	sed -i "s#https://replaceme/mdq#${RENATER_SP_MDQ_URL}#" /etc/shibboleth/shibboleth2.xml
fi

## WAYF Mgt
if [ "$RENATER_SP_TEST_OR_PROD" = "PROD" ]; then
	# comment the TEST blocs
	sed -i 's#<!-- WAYF_RENATER_SP_TEST_OR_PROD=TEST BEGIN -->#<!-- WAYF_RENATER_SP_TEST_OR_PROD=TEST BEGIN --><!--#g' /etc/shibboleth/shibboleth2.xml
	sed -i 's#<!-- WAYF_RENATER_SP_TEST_OR_PROD=TEST END -->#--><!-- WAYF_RENATER_SP_TEST_OR_PROD=TEST END -->#g' /etc/shibboleth/shibboleth2.xml
	# uncomment the PROD blocs
	sed -i 's#<!-- WAYF_RENATER_SP_TEST_OR_PROD=PROD BEGIN --><!--#<!-- WAYF_RENATER_SP_TEST_OR_PROD=PROD BEGIN -->#g' /etc/shibboleth/shibboleth2.xml
	sed -i 's#--><!-- WAYF_RENATER_SP_TEST_OR_PROD=PROD END -->#<!-- WAYF_RENATER_SP_TEST_OR_PROD=PROD END -->#g' /etc/shibboleth/shibboleth2.xml
else
	if [ "$RENATER_SP_TEST_OR_PROD" != "TEST" ]; then
		echo "Error: RENATER_SP_TEST_OR_PROD value must be set to TEST ou PROD (your current value is '$RENATER_SP_TEST_OR_PROD')"
		exit 1
	fi
fi


# shibd is a mandatory daemon, and it must run into the same container as apache
# (bad practice for docker but it seams not possible to split it into 2 separated containers)
echo "Starting shibd daemon... (could be long because of metadata download stuff)"
/etc/init.d/shibd start
# then we forward shibd logs to stdout and stderr to be able to see it in docker logs
# 202206174:
#   don't know why "RUN ln -sf /proc/1/fd/1 /var/log/shibboleth/shibd.log"
#   from the Dockerfile is not working.
{
tail -f /var/log/shibboleth/shibd.log 		>> /proc/1/fd/1 ;
tail -f /var/log/shibboleth/shibd_warn.log 	>> /proc/1/fd/2 ;
tail -f /var/log/shibboleth/transaction.log >> /proc/1/fd/1 ;
tail -f /var/log/shibboleth/signature.log 	>> /proc/1/fd/1
} &


# Run apache daemon foreground (monitored by docker)
rm -f /usr/local/apache2/logs/httpd.pid
exec httpd -DFOREGROUND "$@"
